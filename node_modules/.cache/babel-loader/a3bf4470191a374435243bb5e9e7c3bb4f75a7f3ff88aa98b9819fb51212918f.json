{"ast":null,"code":"var _jsxFileName = \"/Users/zainabanidomi/Desktop/React-Task/src/Components/GetMovies.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { createSearchParams, useNavigate } from \"react-router-dom\";\n// import { CircularProgressbar,buildStyles } from \"react-circular-progressbar\";\n// import 'react-circular-progressbar/dist/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function GetMovies() {\n  _s();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const moveTo = id => {\n    navigate({\n      pathname: '/details',\n      search: createSearchParams({\n        id: id\n      }).toString()\n    });\n  };\n  const getMovies = () => {\n    var requestOptions = {\n      method: 'GET',\n      redirect: 'follow'\n    };\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=a971131533ecd1f4d0cb562ab92a94ef\", requestOptions).then(response => response.json()).then(data => setData(data.results)).catch(error => console.log('error', error));\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainDiv\",\n      onClick: () => moveTo(item.id),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"posterImage\",\n          src: `http://image.tmdb.org/t/p/w500/${item.poster_path}`,\n          alt: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movieDescreption\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"movieTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pubDate\",\n            children: item.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(GetMovies, \"GnM6PEwKYHjV3EM9LZ2EWF4Zkus=\", false, function () {\n  return [useNavigate];\n});\n_c = GetMovies;\nvar _c;\n$RefreshReg$(_c, \"GetMovies\");","map":{"version":3,"names":["useEffect","useState","createSearchParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","GetMovies","_s","navigate","data","setData","moveTo","id","pathname","search","toString","getMovies","requestOptions","method","redirect","fetch","then","response","json","results","catch","error","console","log","children","map","item","className","onClick","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","release_date","_c","$RefreshReg$"],"sources":["/Users/zainabanidomi/Desktop/React-Task/src/Components/GetMovies.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {createSearchParams ,useNavigate } from \"react-router-dom\";\n// import { CircularProgressbar,buildStyles } from \"react-circular-progressbar\";\n// import 'react-circular-progressbar/dist/styles.css';\n\n\nexport function GetMovies() {\n    const navigate = useNavigate();\n    const [data, setData] = useState([]);\n\n    const moveTo = (id)=>{\n        navigate({\n        pathname:'/details',\n        search: createSearchParams({\n            id:id\n        }).toString()   \n        \n        });\n\n    }       \n\n    const  getMovies = ()=> {\n        var requestOptions = {\n            method: 'GET',\n            redirect: 'follow'\n        };\n\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=a971131533ecd1f4d0cb562ab92a94ef\", requestOptions)\n            .then(response => response.json())\n            .then(data => setData(data.results))\n            .catch(error => console.log('error', error));\n    }\n    useEffect(() => {\n        getMovies();\n\n    }, [])\n    console.log(data)\n    return (\n        <>\n        \n                {data.map(item =>\n                <div className=\"mainDiv\" onClick={()=> moveTo(item.id)}>\n                    <div className=\"postContainer\" key={item.id}>\n                        <img className=\"posterImage\" src={`http://image.tmdb.org/t/p/w500/${item.poster_path}`} alt={item.title} />\n                        {/* <div className=\"circularProgressBar\">\n                        <CircularProgressbar\n                            value={item.vote_average}\n                            text={item.vote_average}\n                            styles={buildStyles({\n                                strokeLinecap: 'butt',\n                                textSize: '30px',\n                                // pathTransitionDuration: 0.5,\n                                textColor: '#f88',\n                                backgroundColor: '#101010',\n                                trailColor: '#339933',\n                                \n                            })}\n                            />\n                        </div> */}\n                        <div className=\"movieDescreption\">\n                            <h4 className=\"movieTitle\">{item.title}</h4>\n                            <p className=\"pubDate\">{item.release_date}</p>\n                        \n                        </div>\n                    </div>\n                    </div>\n                )}\n       \n        </>\n\n    );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAQC,kBAAkB,EAAEC,WAAW,QAAQ,kBAAkB;AACjE;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMY,MAAM,GAAIC,EAAE,IAAG;IACjBJ,QAAQ,CAAC;MACTK,QAAQ,EAAC,UAAU;MACnBC,MAAM,EAAEd,kBAAkB,CAAC;QACvBY,EAAE,EAACA;MACP,CAAC,CAAC,CAACG,QAAQ;IAEX,CAAC,CAAC;EAEN,CAAC;EAED,MAAOC,SAAS,GAAGA,CAAA,KAAK;IACpB,IAAIC,cAAc,GAAG;MACjBC,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE;IACd,CAAC;IAEDC,KAAK,CAAC,qFAAqF,EAAEH,cAAc,CAAC,CACvGI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACZ,IAAI,IAAIC,OAAO,CAACD,IAAI,CAACe,OAAO,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC,CAAC;EACpD,CAAC;EACD5B,SAAS,CAAC,MAAM;IACZkB,SAAS,EAAE;EAEf,CAAC,EAAE,EAAE,CAAC;EACNW,OAAO,CAACC,GAAG,CAACnB,IAAI,CAAC;EACjB,oBACIN,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EAESpB,IAAI,CAACqB,GAAG,CAACC,IAAI,iBACd5B,OAAA;MAAK6B,SAAS,EAAC,SAAS;MAACC,OAAO,EAAEA,CAAA,KAAKtB,MAAM,CAACoB,IAAI,CAACnB,EAAE,CAAE;MAAAiB,QAAA,eACnD1B,OAAA;QAAK6B,SAAS,EAAC,eAAe;QAAAH,QAAA,gBAC1B1B,OAAA;UAAK6B,SAAS,EAAC,aAAa;UAACE,GAAG,EAAG,kCAAiCH,IAAI,CAACI,WAAY,EAAE;UAACC,GAAG,EAAEL,IAAI,CAACM;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAgB3GtC,OAAA;UAAK6B,SAAS,EAAC,kBAAkB;UAAAH,QAAA,gBAC7B1B,OAAA;YAAI6B,SAAS,EAAC,YAAY;YAAAH,QAAA,EAAEE,IAAI,CAACM;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eAC5CtC,OAAA;YAAG6B,SAAS,EAAC,SAAS;YAAAH,QAAA,EAAEE,IAAI,CAACW;UAAY;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAE5C;MAAA,GArB0BV,IAAI,CAACnB,EAAE;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAsBrC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EACT,iBAEN;AAGX;AAAClC,EAAA,CAjEeD,SAAS;EAAA,QACJL,WAAW;AAAA;AAAA0C,EAAA,GADhBrC,SAAS;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}